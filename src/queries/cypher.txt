//this cypher query returns a list of node types that have the potential to participate in a 3-way relationship
//the criteria for this are that
// a node has incoming relationships form at least 2 distinct other node types.
// the source node and the target node in the relationship are not of the same type

MATCH (rhs)<-[r]-(lhs)
WITH lhs, type(r) as rel_name, rhs, labels(lhs) AS lhs_labels, labels(rhs) as rhs_labels
WITH lhs, rel_name, rhs, reduce(dup = FALSE, label IN lhs_labels | (dup OR label IN rhs_labels)) AS has_dup
WHERE  NOT has_dup AND (exists(lhs.title) AND exists(rhs.title)) AND rhs.title <> "Deloitte TOM"
with distinct labels(lhs)[0] as lhs_label, rel_name, labels(rhs)[0] as rhs_label
with collect({r: rhs_label, l: lhs_label}) as r_lhs_rhs, lhs_label,  rhs_label
unwind r_lhs_rhs AS r_lhs_rhs_rows
with r_lhs_rhs_rows.r as pivots, count(r_lhs_rhs_rows.r) as count_rel
where count_rel > 1
with pivots

MATCH (rhs)<-[r]-(lhs)
WITH lhs, type(r) as rel_name, keys(r)[0] as field, rhs, labels(lhs) AS lhs_labels, labels(rhs) as rhs_labels, pivots
WITH lhs, rel_name, rhs, reduce(dup = FALSE, label IN lhs_labels | (dup OR label IN rhs_labels)) AS has_dup, pivots, field
WHERE  NOT has_dup AND (exists(lhs.title) AND exists(rhs.title)) AND rhs.title <> "Deloitte TOM"
with labels(rhs)[0] as rhs_label, labels(lhs)[0] as lhs_label, rel_name, field
where labels(rhs)[0] in pivots
return distinct lhs_label, rhs_label, rel_name, field



MATCH (l:Organisation)-[rel]->(r:Process)
WHERE exists(rel.ftes)
RETURN id(l) as l_id, id(r) as r_id, l.title as l_title, r.title as r_title, rel.ftes as field


MATCH (rhs)-[r]-(lhs)
WITH lhs, type(r) as rel_name, rhs, labels(lhs) AS lhs_labels, labels(rhs) as rhs_labels
WITH lhs, rel_name, rhs, reduce(dup = FALSE, label IN lhs_labels | (dup OR label IN rhs_labels)) AS has_dup
WHERE  NOT has_dup AND (exists(lhs.title) AND exists(rhs.title)) AND rel_name <> "is_part_of"
with distinct labels(lhs)[0] as lhs_label, rel_name, labels(rhs)[0] as rhs_label
with collect({r: rhs_label, l: lhs_label}) as r_lhs_rhs, lhs_label,  rhs_label
unwind r_lhs_rhs AS r_lhs_rhs_rows
with r_lhs_rhs_rows.r as pivots, count(r_lhs_rhs_rows.r) as count_rel
where count_rel > 1
with pivots

MATCH (rhs)-[r]-(lhs)
WITH lhs, r, type(r) as rel_name, keys(r)[0] as field, rhs, labels(lhs) AS lhs_labels, labels(rhs) as rhs_labels, pivots, startNode(r) = rhs as is_rhs_start
WITH lhs, r, rel_name, rhs, reduce(dup = FALSE, label IN lhs_labels | (dup OR label IN rhs_labels)) AS has_dup, pivots, field, is_rhs_start
WHERE  NOT has_dup AND (exists(lhs.title) AND exists(rhs.title)) AND rel_name <> "is_part_of"
with r, labels(rhs)[0] as rhs_label, labels(lhs)[0] as lhs_label, rel_name, field, is_rhs_start
where labels(rhs)[0] in pivots
return distinct lhs_label, rhs_label, rel_name, field, is_rhs_start
